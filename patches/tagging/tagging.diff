diff --git a/collector/gembc.c b/collector/gembc.c
index d8dfe6f..ba35c18 100644
--- a/collector/gembc.c
+++ b/collector/gembc.c
@@ -192,6 +192,12 @@ void ggggc_postCompact(struct GGGGC_Pool *);
     d = (struct GGGGC_Descriptor *) dobj; \
 } while(0)
 
+/* check if a value is user-tagged. It's done here, while adding to the
+ * to-check list, instead of while removing from the to-check list, because the
+ * descriptor may be tagged by the GC, and we can only distinguish the
+ * descriptor from other pointers at this point. */
+#define IS_TAGGED(p) ((ggc_size_t) (p) & (sizeof(ggc_size_t)-1))
+
 /* macro to add an object's pointers to the tosearch list */
 #define ADD_OBJECT_POINTERS(obj, descriptor) do { \
     void **objVp = (void **) (obj); \
@@ -204,6 +210,7 @@ void ggggc_postCompact(struct GGGGC_Pool *);
                 curDescription = descriptor->pointers[++curDescriptorWord]; \
             if (curDescription & 1) \
                 /* it's a pointer */ \
+                if (objVp[curWord] && !IS_TAGGED(objVp[curWord])) \
                 TOSEARCH_ADD(&objVp[curWord]); \
             curDescription >>= 1; \
         } \
@@ -388,6 +395,7 @@ collect:
     for (pslCur = ggggc_rootPointerStackList; pslCur; pslCur = pslCur->next) {
         for (psCur = pslCur->pointerStack; psCur; psCur = psCur->next) {
             for (i = 0; i < psCur->size; i++) {
+                if (psCur->pointers[i] && !IS_TAGGED(*(void **) psCur->pointers[i]))
                 TOSEARCH_ADD(psCur->pointers[i]);
             }
         }
@@ -657,6 +665,7 @@ void ggggc_collectFull()
     for (pslCur = ggggc_rootPointerStackList; pslCur; pslCur = pslCur->next) {
         for (psCur = pslCur->pointerStack; psCur; psCur = psCur->next) {
             for (i = 0; i < psCur->size; i++) {
+                if (psCur->pointers[i] && !IS_TAGGED(*(void **) psCur->pointers[i]))
                 TOSEARCH_ADD(psCur->pointers[i]);
             }
         }
